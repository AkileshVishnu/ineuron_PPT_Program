
Implementation in Python

Question1:


def findCommonElements(arr1, arr2, arr3):
    result = []
    i, j, k = 0, 0, 0

    while i < len(arr1) and j < len(arr2) and k < len(arr3):
        if arr1[i] == arr2[j] == arr3[k]:
            result.append(arr1[i])
            i += 1
            j += 1
            k += 1
        elif arr1[i] < arr2[j]:
            i += 1
        elif arr2[j] < arr3[k]:
            j += 1
        else:
            k += 1

    return result

# Test the function
arr1 = [1, 2, 3, 4, 5]
arr2 = [1, 2, 5, 7, 9]
arr3 = [1, 3, 4, 5, 8]
commonElements = findCommonElements(arr1, arr2, arr3)
print(commonElements)

----------------------------------------------------------------------------------------------------------------------------------

Question2:


def findDisjoint(nums1, nums2):
    set1 = set(nums1)
    set2 = set(nums2)

    distinct_nums1 = list(set1 - set2)
    distinct_nums2 = list(set2 - set1)

    return [distinct_nums1, distinct_nums2]

# Test the function
nums1 = [1, 2, 3]
nums2 = [2, 4, 6]
result = findDisjoint(nums1, nums2)
print(result)


----------------------------------------------------------------------------------------------------------------------------------


Question3:




----------------------------------------------------------------------------------------------------------------------------------

Question4:



def arrayPairSum(nums):
    nums.sort()
    max_sum = 0
    for i in range(0, len(nums), 2):
        max_sum += nums[i]
    return max_sum

# Test the function
nums = [1, 4, 3, 2]
maximized_sum = arrayPairSum(nums)
print(maximized_sum)

----------------------------------------------------------------------------------------------------------------------------------

Question5:


----------------------------------------------------------------------------------------------------------------------------------

Question6:


def sortedSquares(nums):
    squared_nums = [num * num for num in nums]
    squared_nums.sort()
    return squared_nums

# Test the function
nums = [-4, -1, 0, 3, 10]
result = sortedSquares(nums)
print(result)

----------------------------------------------------------------------------------------------------------------------------------

Question7:


----------------------------------------------------------------------------------------------------------------------------------

Question8:


def shuffle(nums, n):
    result = []
    for i in range(n):
        result.append(nums[i])
        result.append(nums[i + n])
    return result

# Test the function
nums = [2, 5, 1, 3, 4, 7]
n = 3
result = shuffle(nums, n)
print(result)

----------------------------------------------------------------------------------------------------------------------------------
